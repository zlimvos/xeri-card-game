@import url('css/cards.css'); /* Ensure this path is correct */

:root {
    --spread: 80deg;
    --spacing: 12%;
    --table-card-spacing: 30px; /* Add this variable for table card spacing */
}

/* General styles */

body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f0f0f0;
    margin: 0;
    padding: 20px;
}

h1 {
    margin-bottom: 20px;
}

#game-board {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    margin: 20px auto;
    width: 80%;
    max-width: 1200px;
}

/* Column styles */

.column {
    border: 1px solid #ccc;
    padding: 10px;
    width: 30%; /* Width for Player 1 and Player 2 columns */
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    min-height: 300px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#mid {
    width: 20%; /* Adjusted width to make the column thinner */
}

/* Game Messages styles */
#messageBox {
    width: 100%; /* Full width of the display */
    border: 1px solid #ccc;
    padding: 10px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    min-height: 100px;
    margin-top: 20px;
    overflow-y: scroll;
    text-align: left;
}

/* Hand, deck, and xeri styles */

.hand, .deck, .xeri {
    border: 1px solid #000;
    min-height: 50px;
    margin-top: 10px;
    padding: 10px;
    background-color: #f9f9f9;
    border-radius: 5px;
    width: 100%;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}

.hand div, .deck div, .xeri div {
    margin: 5px;
}

button {
    padding: 10px 20px;
    font-size: 16px;
    margin: 20px 10px;
    cursor: pointer;
    border: none;
    border-radius: 5px;
    background-color: #4CAF50;
    color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #45a049;
}

.hand div {
    display: inline-block;
    margin: 0 5px;
}

#handP1 {
    border: 2px solid red;
    pointer-events: none;
}

#handP2 {
    border: 2px solid blue;
    pointer-events: none;
}

#handP1.active, #handP2.active {
    pointer-events: auto;
}

/* Fanned hand styles */

.hand.fanned {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    height: 8em;
}

.hand.fanned .card {
    position: absolute;
    transition: transform 0.3s ease;
}

.hand.fanned .card:nth-child(1) {
    transform: rotate(calc(-1 * var(--spread))) translateX(calc(-3 * var(--spacing)));
}

.hand.fanned .card:nth-child(2) {
    transform: rotate(calc(-0.6 * var(--spread))) translateX(calc(-2 * var(--spacing)));
}

.hand.fanned .card:nth-child(3) {
    transform: rotate(calc(-0.2 * var(--spread))) translateX(calc(-1 * var(--spacing)));
}

.hand.fanned .card:nth-child(4) {
    transform: rotate(calc(0.2 * var(--spread))) translateX(calc(0 * var(--spacing)));
}

.hand.fanned .card:nth-child(5) {
    transform: rotate(calc(0.6 * var(--spread))) translateX(calc(1 * var(--spacing)));
}

.hand.fanned .card:nth-child(6) {
    transform: rotate(calc(1 * var(--spread))) translateX(calc(2 * var(--spacing)));
}

.hand.fanned .card:nth-child(1) { z-index: 6; }
.hand.fanned .card:nth-child(2) { z-index: 5; }
.hand.fanned .card:nth-child(3) { z-index: 4; }
.hand.fanned .card:nth-child(4) { z-index: 3; }
.hand.fanned .card:nth-child(5) { z-index: 2; }
.hand.fanned .card:nth-child(6) { z-index: 1; }

.hand.fanned .card {
    transform: rotate(calc(var(--spread) * (var(--i) - 2.5)));
    left: calc(var(--spacing) * var(--i));
}

/* Stack the cards in the middle box with a slight overlap */
.deck.playingCards {
    position: relative;
    height: auto; /* Adjust this if needed */
}

.deck.playingCards .card {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, calc(var(--i) * var(--table-card-spacing))); /* Use the variable for spacing */
}

/* Add this to ensure card images are shown correctly */
.deck .card {
    position: absolute;
    width: 3.3em;
    height: 4.6em;
}

/* Ensure the deckMid class has a defined height to accommodate stacked cards */
#deckMid {
    position: relative;
    height: 20em; /* Adjust as needed */
    margin: 0 auto;
    width: 80%;
}
